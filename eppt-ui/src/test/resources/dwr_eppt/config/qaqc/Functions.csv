!,Functions List,
!%2C (HTML standard value) is a String replacement for comma literals as commas are not valid characters in CSV formatted files,,
!Function.csv - this file contains jython code snippets used to fill out relevant data for the QA/QC report. Input parameters are replaced with parameters from Summary.csv. Functions must fit into a single line/column so the java.util.stream API is heavily utilized,,
!Special Variables - dssReader is an instance of the DssReader class that has getGuiLinkData getDtsData and getThresholdData functions for the scenario for the given context,,
!Special Variables - titleReader is an instance of the TitleReader class that has getGuiLinkId and getDtsTitle functions for the scenario for the given context,,
!Special Variables - periodFilter is a filter for the water year period or long term period filter,,
!Special Variables - commonPeriodFilter is a filter for the period common to both base and alternative scenarios,,
!Helper Scripts - jython scripts in the /config/qaqc/scripts directory are loaded at runtime. FunctionalAPIs.py and QaQcScriptFunctions.py are specifically used when the Stream API is insufficient,,
!Reference documentation - JythonFunctions.docx for more information,,
!%2C (HTML standard value) is a String replacement for comma literals as commas are not valid characters in CSV formatted files,,
!,,
1,DvAnnualExceedanceWYD(${guiLinkId}%2C ${month}),calculateExceedance(dssReader.getYearlyGuiLinkData(${guiLinkId}%2C ${month}).entrySet().stream().filter(annualCommonPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).map(jf(lambda e : e.getValue())).collect(toList()))
2,DtsTitle(${dtsId}),titleReader.getDtsTitle(${dtsId})
3,DtsEntirePeriodPerMonth(${dtsId}),calculateExceedance(dssReader.getDtsData(${dtsId}).entrySet().stream().filter(periodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).map(jf(lambda x : x.getValue())).collect(toList()))
4,DtsEntirePeriodExceedanceAllMonths(${dtsId}),calculateExceedance(ArrayList(dssReader.getDtsData(${dtsId}).values()))
5,DvEntirePeriodExceedancePerMonth(${guiLinkId}),calculateExceedance(dssReader.getGuiLinkData(${guiLinkId}).entrySet().stream().filter(periodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).map(jf(lambda x : x.getValue())).collect(toList()))
6,DvEntirePeriodMonthlyAverage(${guiLinkId}),dssReader.getGuiLinkData(${guiLinkId}).entrySet().stream().filter(commonPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).collect(groupingBy(jf(lambda k : k.getKey().getMonth().minus(1))%2C averagingDouble(jdf(lambda e : e.getValue()))))
7,DtsEntirePeriodMonthlyAverage(${dtsId}),dssReader.getDtsData(${dtsId}).entrySet().stream().filter(commonPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).collect(groupingBy(jf(lambda e : e.getKey().getMonth().minus(1))%2C averagingDouble(jdf(lambda e : e.getValue()))))
8,DvExceedanceSingleMonth(${guiLinkId}%2C ${month}),calculateExceedance(dssReader.getGuiLinkData(${guiLinkId}).entrySet().stream().filter(MonthPeriodFilter(${month})).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).map(jf(lambda x : x.getValue())).collect(toList()))
9,GuiLinkTitle(${guiLinkId}),titleReader.getGuiLinkId(${guiLinkId})
10,DtsPeriodAverage(${dtsId}),dssReader.getYearlyDtsData(${dtsId}).entrySet().stream().filter(annualCommonPeriodFilter).filter(annualPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).mapToDouble(jdf(lambda e : e.getValue())).average().orElse(0)
11,DtsPeriodAverageOneMonth(${dtsId}%2C ${month}),dssReader.getDtsData(${dtsId}).entrySet().stream().filter(commonPeriodFilter).filter(MonthPeriodFilter(${month})).filter(periodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).mapToDouble(jdf(lambda e : e.getValue())).average().orElse(0)
12,DvPeriodAverage(${guiLinkId}),dssReader.getYearlyGuiLinkData(${guiLinkId}).entrySet().stream().filter(annualCommonPeriodFilter).filter(annualPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).mapToDouble(jdf(lambda e : e.getValue())).average().orElse(0)
13,DvPeriodAverageOneMonth(${guiLinkId}%2C ${month}),dssReader.getGuiLinkData(${guiLinkId}).entrySet().stream().filter(commonPeriodFilter).filter(MonthPeriodFilter(${month})).filter(periodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).mapToDouble(jdf(lambda e : e.getValue())).average().orElse(0)
14,DtsGreaterThan0PeriodAverage(${dtsId}),dssReader.aggregateYearly(dssReader.getDtsData(${dtsId}).entrySet().stream().filter(commonPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).collect(toMap(jf(lambda e : e.getKey())%2C jf(lambda e : e.getValue() if e.getValue() > 0.0 else 0.0)%2C jbo(lambda o1%2C o2 : o1)%2C js(lambda : TreeMap())))).entrySet().stream().filter(annualPeriodFilter).mapToDouble(jdf(lambda e:e.getValue())).average().orElse(0)
15,DtsLessThan0PeriodAverage(${dtsId}),dssReader.aggregateYearly(dssReader.getDtsData(${dtsId}).entrySet().stream().filter(commonPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).collect(toMap(jf(lambda e : e.getKey())%2C jf(lambda e : e.getValue() if e.getValue() < 0.0 else 0.0)%2C jbo(lambda o1%2C o2 : o1)%2C js(lambda : TreeMap())))).entrySet().stream().filter(annualPeriodFilter).mapToDouble(jdf(lambda e:e.getValue())).average().orElse(0)
16,DtsPeriodCount(${dtsId}),dssReader.getDtsData(${dtsId}).entrySet().stream().filter(commonPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).mapToDouble(jdf(lambda e : e.getValue())).filter(jpDouble(lambda v : v == comparisonValue)).count()
17,DtsLessThanReportDv(${dtsId}%2C${guiLinkId1}%2C${guiLinkId2}),dssReader.getDtsData(${dtsId}).entrySet().stream().filter(periodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).filter(jp(lambda v: v.getValue() == 300)).map(jf(lambda e : buildListPrefix(e) + join([formatAsString(dssReader.getGuiLinkData(${guiLinkId1}).get(e.getKey())%2C dssReader.getUnits())%2C formatAsString(dssReader.getGuiLinkData(${guiLinkId2}).get(e.getKey())%2C dssReader.getUnits())]))).collect(toList())
18,DtsGreaterThanReportDv(${dtsId}%2C${guiLinkId1}%2C${guiLinkId2}),dssReader.getDtsData(${dtsId}).entrySet().stream().filter(periodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).filter(jp(lambda v: v.getValue() == 100)).map(jf(lambda e : buildListPrefix(e) + join([formatAsString(dssReader.getGuiLinkData(${guiLinkId1}).get(e.getKey())%2C dssReader.getUnits())%2C formatAsString(dssReader.getGuiLinkData(${guiLinkId2}).get(e.getKey())%2C dssReader.getUnits())]))).collect(toList())
19,DtsGreaterThan0ReportDv(${guiLinkId}),dssReader.getGuiLinkData(${guiLinkId}).entrySet().stream().filter(periodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).filter(jp(lambda v: v.getValue() > 0)).map(jf(lambda e : buildListPrefix(e) + formatAsString(e.getValue()%2C dssReader.getUnits()))).collect(toList())
20,DtsNot0ReportMonth(${dtsId}),dssReader.getDtsData(${dtsId}).entrySet().stream().filter(periodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).filter(jp(lambda e: e.getValue() != 0)).map(jf(lambda e : buildListPrefix(e) + formatAsString(e.getValue() %2C dssReader.getUnits()))).collect(toList())
21,DvForMonth(${guiLinkId}%2C${month}),dssReader.getGuiLinkData(${guiLinkId}).entrySet().stream().filter(commonPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).filter(MonthPeriodFilter(${month})).collect(toMap(jf(lambda e : e.getKey().getYear())%2C jf(lambda e: e.getValue())))
22,DtsForMonth(${dtsId}%2C${month}),dssReader.getDtsData(${dtsId}).entrySet().stream().filter(commonPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).filter(MonthPeriodFilter(${month})).collect(toMap(jf(lambda e : e.getKey().getYear())%2C jf(lambda e: e.getValue())))
23,DtsPeriodCountEquals(${dtsId}),dssReader.getDtsData(${dtsId}).entrySet().stream().filter(commonPeriodFilter).filter(periodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).mapToDouble(jdf(lambda e : e.getValue())).filter(jpDouble(lambda v : v == 200)).count()
24,DtsEqualsReportDv8(${dtsId}%2C${guiLinkId1}%2C${guiLinkId2}%2C${guiLinkId3}%2C${guiLinkId4}%2C${guiLinkId5}%2C${guiLinkId6}%2C${guiLinkId7}%2C${guiLinkId8}),dssReader.getDtsData(${dtsId}).entrySet().stream().filter(periodFilter).filter(jp(lambda v: v.getValue() == 200)).map(jf(lambda e : buildListPrefix(e) + join([formatAsString(dssReader.getGuiLinkData(${guiLinkId1}).get(e.getKey())%2C dssReader.getUnits())%2C formatAsString(dssReader.getGuiLinkData(${guiLinkId2}).get(e.getKey())%2C dssReader.getUnits())%2C formatAsString(dssReader.getGuiLinkData(${guiLinkId3}).get(e.getKey())%2C dssReader.getUnits())%2C formatAsString(dssReader.getGuiLinkData(${guiLinkId4}).get(e.getKey())%2C dssReader.getUnits())%2C formatAsString(dssReader.getGuiLinkData(${guiLinkId5}).get(e.getKey())%2C dssReader.getUnits())%2C formatAsString(dssReader.getGuiLinkData(${guiLinkId6}).get(e.getKey())%2C dssReader.getUnits())%2C formatAsString(dssReader.getGuiLinkData(${guiLinkId7}).get(e.getKey())%2C dssReader.getUnits())%2C formatAsString(dssReader.getGuiLinkData(${guiLinkId8}).get(e.getKey())%2C dssReader.getUnits())]))).collect(toList())
25,DvForYearWYD(${guiLinkId}%2C${month}),dssReader.getYearlyGuiLinkData(${guiLinkId}%2C${month}).entrySet().stream().filter(annualCommonPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).collect(toMap(jf(lambda e : e.getKey())%2C jf(lambda e : e.getValue())))
26,DtsForYearWYD(${dtsId}%2C${month}),dssReader.getYearlyDtsData(${dtsId}%2C${month}).entrySet().stream().filter(annualCommonPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).collect(toMap(jf(lambda e : e.getKey())%2C jf(lambda e : e.getValue())))
27,DtsNotEqualReportDts(${dtsId1}%2C ${dtsId2}),dssReader.getDtsData(${dtsId1}).entrySet().stream().filter(periodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).filter(jp(lambda e: e.getValue() != dssReader.getDtsData(${dtsId2}).get(e.getKey()))).map(jf(lambda e : buildListPrefix(e) + join([formatAsString(e.getValue()%2C dssReader.getUnits())%2C formatAsString(dssReader.getDtsData(${dtsId2}).get(e.getKey())%2C dssReader.getUnits())]))).collect(toList())
28,DtsPeriodMonthlyAverage(${dtsId}),dssReader.getDtsData(${dtsId}).entrySet().stream().filter(commonPeriodFilter).filter(periodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).mapToDouble(jdf(lambda e : e.getValue())).average().orElse(0)
29,DvPeriodAverageWYD(${guiLinkId}%2C ${startMonth}%2C ${endMonth}),dssReader.getYearlyGuiLinkData(${guiLinkId}%2CWaterYearDefinition(""%2C${startMonth}%2C ${endMonth})).entrySet().stream().filter(annualCommonPeriodFilter).filter(annualPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).mapToDouble(jdf(lambda e : e.getValue())).average().orElse(0)
30,DtsPeriodAverageWYD(${dtsId}%2C ${startMonth}%2C ${endMonth}),dssReader.getYearlyDtsData(${dtsId}%2CWaterYearDefinition(""%2C${startMonth}%2C ${endMonth})).entrySet().stream().filter(annualCommonPeriodFilter).filter(annualPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).mapToDouble(jdf(lambda e : e.getValue())).average().orElse(0)
31,DtsExceedanceSingleMonth(${dtsId}%2C ${month}),calculateExceedance(dssReader.getDtsData(${dtsId}).entrySet().stream().filter(MonthPeriodFilter(${month})).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).map(jf(lambda x : x.getValue())).collect(toList()))
32,DtsAnnualExceedanceWYD(${dtsId}%2C ${month}),calculateExceedance(dssReader.getYearlyDtsData(${dtsId}%2C ${month}).entrySet().stream().filter(annualCommonPeriodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).map(jf(lambda e : e.getValue())).collect(toList()))
33,DtsLessThanReportDts(${dtsId1}%2C${guiLinkId1}%2C${dtsId2}),dssReader.getDtsData(${dtsId1}).entrySet().stream().filter(periodFilter).filter(jp(lambda x : Constant.isValidValue(x.getValue()))).filter(jp(lambda v: v.getValue() == 300)).map(jf(lambda e : buildListPrefix(e) + join([formatAsString(dssReader.getGuiLinkData(${guiLinkId1}).get(e.getKey())%2C dssReader.getUnits())%2C formatAsString(dssReader.getDtsData(${dtsId2}).get(e.getKey())%2C dssReader.getUnits())]))).collect(toList())