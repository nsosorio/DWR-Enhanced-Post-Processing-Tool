/********************** DESCRIPTION ****************************
- define CSII input variables used in the post-processing script
- variables should be assigned a model neutral name
- make sure to print out the variables read-into the WRESL script for verification purposes

********************* REVIEW HISTORY****************************
Karandev Singh		| DWR	|	12/03/2019	|	Reservoirs Operations
Ahmed Ali           | DWR   |   01/10/2020  |   Upstream MIF, NOD Weirs Operation, NOD Groundwater Pumping

****************************************************************/

/******************** RESERVOIR OPERATIONS *********************/
define TRINITY_STRG { timeseries 'S1' kind 'STORAGE' units 'TAF' convert 'TAF' }
define TRINITY_LEVEL_DPL { timeseries 'S1LEVEL1DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define TRINITY_LEVEL_RC { timeseries 'S1LEVEL3DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define TRINITY_LEVEL_FLD { timeseries 'S1LEVEL4DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define TRINITY_LEVEL_CAP { timeseries 'S1LEVEL5DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define TRINITY_NR_SPILL { timeseries 'F1' kind 'FLOW-SPILL-NON-RECOV' units 'CFS' convert 'TAF' }

define SHASTA_STRG { timeseries 'S4' kind 'STORAGE' units 'TAF' convert 'TAF' }
define SHASTA_LEVEL_DPL { timeseries 'S4LEVEL1DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define SHASTA_LEVEL_RC { timeseries 'S4LEVEL3DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define SHASTA_LEVEL_FLD { timeseries 'S4LEVEL5DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define SHASTA_LEVEL_CAP { timeseries 'S4LEVEL6DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define SHASTA_NR_SPILL { timeseries 'F4' kind 'FLOW-SPILL-NON-RECOV' units 'CFS' convert 'TAF' }
define SHASTA_CVPIA_B2 { value 2200 }

define FOLSOM_STRG { timeseries 'S8' kind 'STORAGE' units 'TAF' convert 'TAF' }
define FOLSOM_LEVEL_DPL { timeseries 'S8LEVEL1DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define FOLSOM_LEVEL_RC { timeseries 'S8LEVEL3DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define FOLSOM_LEVEL_FLD { timeseries 'S8LEVEL5DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define FOLSOM_LEVEL_CAP { timeseries 'S8LEVEL6DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define FOLSOM_NR_SPILL { timeseries 'F8' kind 'FLOW-SPILL-NON-RECOV' units 'CFS' convert 'TAF' }

define OROVILLE_STRG { timeseries 'S6' kind 'STORAGE' units 'TAF' convert 'TAF' }
define OROVILLE_LEVEL_DPL { timeseries 'S6LEVEL1DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define OROVILLE_LEVEL_RC { timeseries 'S6LEVEL3DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define OROVILLE_LEVEL_FLD { timeseries 'S6LEVEL5DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define OROVILLE_LEVEL_CAP { timeseries 'S6LEVEL6DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define OROVILLE_NR_SPILL { timeseries 'F6' kind 'FLOW-SPILL-NON-RECOV' units 'CFS' convert 'TAF' }

define SANLUIS_CVP_STRG { timeseries 'S11' kind 'STORAGE' units 'TAF' convert 'TAF' }
define SANLUIS_CVP_LEVEL_DPL { timeseries 'S11LEVEL1DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define SANLUIS_CVP_LEVEL_CAP { timeseries 'S11LEVEL5DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define SANLUIS_CVP_NR_SPILL { timeseries 'F11' kind 'FLOW-SPILL-NON-RECOV' units 'CFS' convert 'TAF' }
define SANLUIS_CVP_RC { timeseries 'CVPRULECV' kind 'RULECURVE' units 'TAF' convert 'TAF' }

define SANLUIS_SWP_STRG { timeseries 'S12' kind 'STORAGE' units 'TAF' convert 'TAF' }
define SANLUIS_SWP_LEVEL_DPL { timeseries 'S12LEVEL1DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define SANLUIS_SWP_LEVEL_CAP { timeseries 'S12LEVEL5DV' kind 'STORAGE-LEVEL' units 'TAF' convert 'TAF' }
define SANLUIS_SWP_NR_SPILL { timeseries 'F12' kind 'FLOW-SPILL-NON-RECOV' units 'CFS' convert 'TAF' }
define SANLUIS_SWP_RC { timeseries 'SWPRULECV' kind 'RULECURVE' units 'TAF' convert 'TAF' }

define CLR_CRK_TUNNEL { timeseries 'D100' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define CLR_CRK_CAP { value 3300 * CFS_TAF}
define CLR_CRK_TGT_IMPORT { timeseries 'TRIN_IMPDV' kind 'UNDEFINED' units 'CFS' convert 'TAF' }

define TRINITY_STRG_ { alias TRINITY_STRG kind 'DTS-RESOP-INPUT' units 'TAF' }
define TRINITY_LEVEL_DPL_ { alias TRINITY_LEVEL_DPL kind 'DTS-RESOP-INPUT' units 'TAF' }
define TRINITY_LEVEL_RC_ { alias TRINITY_LEVEL_RC kind 'DTS-RESOP-INPUT' units 'TAF' }
define TRINITY_LEVEL_FLD_ { alias TRINITY_LEVEL_FLD kind 'DTS-RESOP-INPUT' units 'TAF' }
define TRINITY_LEVEL_CAP_ { alias TRINITY_LEVEL_CAP kind 'DTS-RESOP-INPUT' units 'TAF' }
define TRINITY_NR_SPILL_ { alias TRINITY_NR_SPILL kind 'DTS-RESOP-INPUT' units 'TAF' }

define SHASTA_STRG_ { alias SHASTA_STRG kind 'DTS-RESOP-INPUT' units 'TAF' }
define SHASTA_LEVEL_DPL_ { alias SHASTA_LEVEL_DPL kind 'DTS-RESOP-INPUT' units 'TAF' }
define SHASTA_LEVEL_RC_ { alias SHASTA_LEVEL_RC kind 'DTS-RESOP-INPUT' units 'TAF' }
define SHASTA_LEVEL_FLD_ { alias SHASTA_LEVEL_FLD kind 'DTS-RESOP-INPUT' units 'TAF' }
define SHASTA_LEVEL_CAP_ { alias SHASTA_LEVEL_CAP kind 'DTS-RESOP-INPUT' units 'TAF' }
define SHASTA_NR_SPILL_ { alias SHASTA_NR_SPILL kind 'DTS-RESOP-INPUT' units 'TAF' }
define SHASTA_CVPIA_B2_ { alias SHASTA_CVPIA_B2 kind 'DTS-RESOP-INPUT' units 'TAF' }

define FOLSOM_STRG_ { alias FOLSOM_STRG kind 'DTS-RESOP-INPUT' units 'TAF' }
define FOLSOM_LEVEL_DPL_ { alias FOLSOM_LEVEL_DPL kind 'DTS-RESOP-INPUT' units 'TAF' }
define FOLSOM_LEVEL_RC_ { alias FOLSOM_LEVEL_RC kind 'DTS-RESOP-INPUT' units 'TAF' }
define FOLSOM_LEVEL_FLD_ { alias FOLSOM_LEVEL_FLD kind 'DTS-RESOP-INPUT' units 'TAF' }
define FOLSOM_LEVEL_CAP_ { alias FOLSOM_LEVEL_CAP kind 'DTS-RESOP-INPUT' units 'TAF' }
define FOLSOM_NR_SPILL_ { alias FOLSOM_NR_SPILL kind 'DTS-RESOP-INPUT' units 'TAF' }

define OROVILLE_STRG_ { alias OROVILLE_STRG kind 'DTS-RESOP-INPUT' units 'TAF' }
define OROVILLE_LEVEL_DPL_ { alias OROVILLE_LEVEL_DPL kind 'DTS-RESOP-INPUT' units 'TAF' }
define OROVILLE_LEVEL_RC_ { alias OROVILLE_LEVEL_RC kind 'DTS-RESOP-INPUT' units 'TAF' }
define OROVILLE_LEVEL_FLD_ { alias OROVILLE_LEVEL_FLD kind 'DTS-RESOP-INPUT' units 'TAF' }
define OROVILLE_LEVEL_CAP_ { alias OROVILLE_LEVEL_CAP kind 'DTS-RESOP-INPUT' units 'TAF' }
define OROVILLE_NR_SPILL_ { alias OROVILLE_NR_SPILL kind 'DTS-RESOP-INPUT' units 'TAF' }

define SANLUIS_CVP_STRG_ { alias SANLUIS_CVP_STRG kind 'DTS-RESOP-INPUT' units 'TAF' }
define SANLUIS_CVP_LEVEL_DPL_ { alias SANLUIS_CVP_LEVEL_DPL kind 'DTS-RESOP-INPUT' units 'TAF' }
define SANLUIS_CVP_LEVEL_CAP_ { alias SANLUIS_CVP_LEVEL_CAP kind 'DTS-RESOP-INPUT' units 'TAF' }
define SANLUIS_CVP_NR_SPILL_ { alias SANLUIS_CVP_NR_SPILL kind 'DTS-RESOP-INPUT' units 'TAF' }
define SANLUIS_CVP_RC_ { alias SANLUIS_CVP_RC kind 'DTS-RESOP-INPUT' units 'TAF' }

define SANLUIS_SWP_STRG_ { alias SANLUIS_SWP_STRG kind 'DTS-RESOP-INPUT' units 'TAF' }
define SANLUIS_SWP_LEVEL_DPL_ { alias SANLUIS_SWP_LEVEL_DPL kind 'DTS-RESOP-INPUT' units 'TAF' }
define SANLUIS_SWP_LEVEL_CAP_ { alias SANLUIS_SWP_LEVEL_CAP kind 'DTS-RESOP-INPUT' units 'TAF' }
define SANLUIS_SWP_NR_SPILL_ { alias SANLUIS_SWP_NR_SPILL kind 'DTS-RESOP-INPUT' units 'TAF' }
define SANLUIS_SWP_RC_ { alias SANLUIS_SWP_RC kind 'DTS-RESOP-INPUT' units 'TAF' }

define CLR_CRK_TUNNEL_ { alias CLR_CRK_TUNNEL kind 'DTS-RESOP-INPUT' units 'TAF' }
define CLR_CRK_CAP_ { alias CLR_CRK_CAP kind 'DTS-RESOP-INPUT' units 'TAF' }
define CLR_CRK_TGT_IMPORT_ { alias CLR_CRK_TGT_IMPORT kind 'DTS-RESOP-INPUT' units 'TAF' }


/******************** Upstream Minimum Flow *********************/
define TRINITY_FLOW { timeseries 'C100' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define TRINITY_FLOW_MIN1 { timeseries 'C100_MIF' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define TRINITY_FLOW_MIN2_LOOKUP { select RIVER_Q from TRINITYMIN where MONTH=MONTH, WYT_TRIN=WYT_TRIN }
define TRINITY_FLOW_MIN2 { value TRINITY_FLOW_MIN2_LOOKUP * CFS_TAF }
define TRINITY_FLOW_MIN { value max(TRINITY_FLOW_MIN1, TRINITY_FLOW_MIN2) }

define CLR_CRK_FLOW { timeseries 'C3' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define CLR_CRK_FLOW_MIN1 { timeseries 'C3_MIF' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define CLR_CRK_FLOW_MIN2 { timeseries 'MINFLOW_C3' kind 'FLOW-MIN-REQUIRED' units 'CFS' convert 'TAF' }
define CLR_CRK_FLOW_MIN3 { timeseries 'C3MIF__Z3' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define CLR_CRK_FLOW_MIN { value max(CLR_CRK_FLOW_MIN1, CLR_CRK_FLOW_MIN2, CLR_CRK_FLOW_MIN3) }

define SAC_KESWICK_FLOW { timeseries 'C5' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define SAC_KESWICK_FLOW_MIN1 { timeseries 'C5_MIF' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define SAC_KESWICK_FLOW_MIN2 { timeseries 'KESWICK_MIN1' kind 'ALIAS' units 'CFS' convert 'TAF' }
define SAC_KESWICK_FLOW_MIN3 { timeseries 'C5MIF__Z3' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define SAC_KESWICK_FLOW_MIN {
	case OctDec {
		condition month <= DEC .and. SAC_KESWICK_FLOW_MIN3 >= 4500.0 * cfs_TAF
			value 4000.0 * cfs_TAF }
	case otherwise {
		condition always
			value max(SAC_KESWICK_FLOW_MIN1, SAC_KESWICK_FLOW_MIN2, SAC_KESWICK_FLOW_MIN3) }
}

define SAC_REDBLUFF_FLOW { timeseries 'C112' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define SAC_REDBLUFF_FLOW_MIN1 { timeseries 'C112_MIF' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define SAC_REDBLUFF_FLOW_MIN2_LOOKUP { select REDMIN from REDBLUFF_BASE where MONTH=MONTH, SHASTAINDX=WYT_SHASTA_CVP }
define SAC_REDBLUFF_FLOW_MIN2 { value SAC_REDBLUFF_FLOW_MIN2_LOOKUP * CFS_TAF }
define SAC_REDBLUFF_FLOW_MIN1_DAILY { timeseries 'C112_MIF_DAILY' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define SAC_REDBLUFF_FLOW_MIN2_DAILY { timeseries 'TS_ADJ_RB' kind 'FLOW' units 'CFS' convert 'TAF' }
define SAC_REDBLUFF_FLOW_MIN { value max(SAC_REDBLUFF_FLOW_MIN1, SAC_REDBLUFF_FLOW_MIN2) + max(SAC_REDBLUFF_FLOW_MIN1_DAILY, SAC_REDBLUFF_FLOW_MIN2_DAILY) }

define SAC_HAMILTONCITY_FLOW { timeseries 'C114' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define SAC_HAMILTONCITY_FLOW_MIN1 { timeseries 'C114_MIF' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define GCID_DEMAND { timeseries 'CON_114GCID' kind 'DEMAND' units 'TAF' convert 'TAF' }
define SAC_HAMILTONCITY_FLOW_MIN2_1 { timeseries 'ERP_C114MIFDV' kind 'FLOW-TARGET' units 'CFS' convert 'TAF' }
define SAC_HAMILTONCITY_FLOW_MIN2_2 {													
    case WBA8NNDemand {
        condition GCID_DEMAND > 100. * cfs_taf	!if there is a significant diversion
        value 4000. * cfs_taf}					!require the bypass flow
    case other {
        condition always
        value 0. }
}		
define SAC_HAMILTONCITY_FLOW_MIN2 { value max (SAC_HAMILTONCITY_FLOW_MIN2_1 , SAC_HAMILTONCITY_FLOW_MIN2_2) }
define SAC_HAMILTONCITY_FLOW_MIN1_DAILY { timeseries 'C114_MIF_DAILY' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define SAC_HAMILTONCITY_FLOW_MIN2_DAILY { timeseries 'TS_ADJ_HC' kind 'FLOW' units 'CFS' convert 'TAF' }
define SAC_HAMILTONCITY_FLOW_MIN { value max(SAC_HAMILTONCITY_FLOW_MIN1, SAC_HAMILTONCITY_FLOW_MIN2) + max(SAC_HAMILTONCITY_FLOW_MIN1_DAILY, SAC_HAMILTONCITY_FLOW_MIN2_DAILY) }

define SAC_WILKINSSLOUGH_FLOW { timeseries 'C129' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define SAC_WILKINSSLOUGH_FLOW_MIN1 { timeseries 'C129_MIF' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define SAC_WILKINSSLOUGH_FLOW_MIN2 { timeseries 'MINFLOW_C129' kind 'FLOW-MIN-REQUIRED' units 'CFS' convert 'TAF' }
define SAC_WILKINSSLOUGH_FLOW_MIN1_DAILY { timeseries 'C129_MIF_DAILY' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define SAC_WILKINSSLOUGH_FLOW_MIN2_DAILY { timeseries 'TS_ADJ_WLK' kind 'FLOW' units 'CFS' convert 'TAF' }
define SAC_WILKINSSLOUGH_FLOW_MIN { value max(SAC_WILKINSSLOUGH_FLOW_MIN1, SAC_WILKINSSLOUGH_FLOW_MIN2) + max(SAC_WILKINSSLOUGH_FLOW_MIN1_DAILY, SAC_WILKINSSLOUGH_FLOW_MIN2_DAILY) * TAF_TAF }

define SAC_FREEPORT_FLOW { timeseries 'C169' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define SAC_FREEPORT_FLOW_MIN { timeseries 'C169_MIF' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }

define FEATHER_LOWFLOW_THERMALITO_FLOW { timeseries 'C200A' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define FEATHER_LOWFLOW_THERMALITO_FLOW_MIN_LOOKUP { select MINFLOW from MINFLOW where  C_ARC=200.1, MONTH=MONTH }
define FEATHER_LOWFLOW_THERMALITO_FLOW_MIN { value FEATHER_LOWFLOW_THERMALITO_FLOW_MIN_LOOKUP * CFS_TAF }

define FEATHER_BLW_THERMALITO_FLOW { timeseries 'C203' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define FEATHER_BLW_THERMALITO_FLOW_MIN { timeseries 'C203_MIF' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }

define FEATHER_VERONA_FLOW { timeseries 'C223' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define FEATHER_VERONA_FLOW_MIN { timeseries 'C223_MIF' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }

define AMERICAN_NIMBUS_FLOW { timeseries 'C9' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define AMERICAN_NIMBUS_FLOW_MIN1 { timeseries 'C9_MIF' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define AMERICAN_NIMBUS_FLOW_MIN2 { timeseries 'C9_FMP' kind 'FLOW' units 'CFS' convert 'TAF' }
define AMERICAN_NIMBUS_FLOW_MIN3 { timeseries 'C9MIF__Z3' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define AMERICAN_NIMBUS_FLOW_MIN { value max(AMERICAN_NIMBUS_FLOW_MIN1, AMERICAN_NIMBUS_FLOW_MIN2, AMERICAN_NIMBUS_FLOW_MIN3) }

define AMERICAN_HSTREET_FLOW { timeseries 'C303' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define AMERICAN_HSTREET_FLOW_MIN1 { timeseries 'C303_MIF' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define AMERICAN_HSTREET_FLOW_MIN2_LOOKUP { select HSTMIN from HST_BASE where MONTH=MONTH, AMERD893=WYT_AMERD893_CVP }
define AMERICAN_HSTREET_FLOW_MIN2 { value AMERICAN_HSTREET_FLOW_MIN2_LOOKUP * CFS_TAF }
define AMERICAN_HSTREET_FLOW_MIN { value max(AMERICAN_HSTREET_FLOW_MIN1, AMERICAN_HSTREET_FLOW_MIN2) }


define TRINITY_FLOW_ { alias TRINITY_FLOW kind 'DTS-NODMIF-INPUT' units 'TAF' }
define TRINITY_FLOW_MIN1_ { alias TRINITY_FLOW_MIN1 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define TRINITY_FLOW_MIN2_ { alias TRINITY_FLOW_MIN2 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define TRINITY_FLOW_MIN_ { alias TRINITY_FLOW_MIN kind 'DTS-NODMIF-INPUT' units 'TAF' }
define CLR_CRK_FLOW_ { alias CLR_CRK_FLOW kind 'DTS-NODMIF-INPUT' units 'TAF' }
define CLR_CRK_FLOW_MIN1_ { alias CLR_CRK_FLOW_MIN1 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define CLR_CRK_FLOW_MIN2_ { alias CLR_CRK_FLOW_MIN2 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define CLR_CRK_FLOW_MIN3_ { alias CLR_CRK_FLOW_MIN3 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define CLR_CRK_FLOW_MIN_ { alias CLR_CRK_FLOW_MIN kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_KESWICK_FLOW_ { alias SAC_KESWICK_FLOW kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_KESWICK_FLOW_MIN1_ { alias SAC_KESWICK_FLOW_MIN1 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_KESWICK_FLOW_MIN2_ { alias SAC_KESWICK_FLOW_MIN2 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_KESWICK_FLOW_MIN3_ { alias SAC_KESWICK_FLOW_MIN3 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_KESWICK_FLOW_MIN_ { alias SAC_KESWICK_FLOW_MIN kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_REDBLUFF_FLOW_ { alias SAC_REDBLUFF_FLOW kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_REDBLUFF_FLOW_MIN1_ { alias SAC_REDBLUFF_FLOW_MIN1 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_REDBLUFF_FLOW_MIN1_DAILY_ { alias SAC_REDBLUFF_FLOW_MIN1_DAILY kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_REDBLUFF_FLOW_MIN2_ { alias SAC_REDBLUFF_FLOW_MIN2 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_REDBLUFF_FLOW_MIN2_DAILY_ { alias SAC_REDBLUFF_FLOW_MIN2_DAILY kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_REDBLUFF_FLOW_MIN_ { alias SAC_REDBLUFF_FLOW_MIN kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_HAMILTONCITY_FLOW_ { alias SAC_HAMILTONCITY_FLOW kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_HAMILTONCITY_FLOW_MIN1_ { alias SAC_HAMILTONCITY_FLOW_MIN1 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_HAMILTONCITY_FLOW_MIN2_ { alias SAC_HAMILTONCITY_FLOW_MIN2 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_HAMILTONCITY_FLOW_MIN1_DAILY_ { alias SAC_HAMILTONCITY_FLOW_MIN1_DAILY kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_HAMILTONCITY_FLOW_MIN2_DAILY_ { alias SAC_HAMILTONCITY_FLOW_MIN2_DAILY kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_HAMILTONCITY_FLOW_MIN_ { alias SAC_HAMILTONCITY_FLOW_MIN kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_WILKINSSLOUGH_FLOW_ { alias SAC_WILKINSSLOUGH_FLOW kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_WILKINSSLOUGH_FLOW_MIN1_ { alias SAC_WILKINSSLOUGH_FLOW_MIN1 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_WILKINSSLOUGH_FLOW_MIN2_ { alias SAC_WILKINSSLOUGH_FLOW_MIN2 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_WILKINSSLOUGH_FLOW_MIN1_DAILY_ { alias SAC_WILKINSSLOUGH_FLOW_MIN1_DAILY kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_WILKINSSLOUGH_FLOW_MIN2_DAILY_ { alias SAC_WILKINSSLOUGH_FLOW_MIN2_DAILY kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_WILKINSSLOUGH_FLOW_MIN_ { alias SAC_WILKINSSLOUGH_FLOW_MIN kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_FREEPORT_FLOW_ { alias SAC_FREEPORT_FLOW kind 'DTS-NODMIF-INPUT' units 'TAF' }
define SAC_FREEPORT_FLOW_MIN_ { alias SAC_FREEPORT_FLOW_MIN kind 'DTS-NODMIF-INPUT' units 'TAF' }
define FEATHER_LOWFLOW_THERMALITO_FLOW_ { alias FEATHER_LOWFLOW_THERMALITO_FLOW kind 'DTS-NODMIF-INPUT' units 'TAF' }
define FEATHER_LOWFLOW_THERMALITO_FLOW_MIN_ { alias FEATHER_LOWFLOW_THERMALITO_FLOW_MIN kind 'DTS-NODMIF-INPUT' units 'TAF' }
define FEATHER_BLW_THERMALITO_FLOW_ { alias FEATHER_BLW_THERMALITO_FLOW kind 'DTS-NODMIF-INPUT' units 'TAF' }
define FEATHER_BLW_THERMALITO_FLOW_MIN_ { alias FEATHER_BLW_THERMALITO_FLOW_MIN kind 'DTS-NODMIF-INPUT' units 'TAF' }
define FEATHER_VERONA_FLOW_ { alias FEATHER_VERONA_FLOW kind 'DTS-NODMIF-INPUT' units 'TAF' }
define FEATHER_VERONA_FLOW_MIN_ { alias FEATHER_VERONA_FLOW_MIN kind 'DTS-NODMIF-INPUT' units 'TAF' }
define AMERICAN_NIMBUS_FLOW_ { alias AMERICAN_NIMBUS_FLOW kind 'DTS-NODMIF-INPUT' units 'TAF' }
define AMERICAN_NIMBUS_FLOW_MIN1_ { alias AMERICAN_NIMBUS_FLOW_MIN1 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define AMERICAN_NIMBUS_FLOW_MIN2_ { alias AMERICAN_NIMBUS_FLOW_MIN2 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define AMERICAN_NIMBUS_FLOW_MIN3_ { alias AMERICAN_NIMBUS_FLOW_MIN3 kind 'DTS-NODMIF-INPUT' units 'TAF' }
define AMERICAN_NIMBUS_FLOW_MIN_ { alias AMERICAN_NIMBUS_FLOW_MIN kind 'DTS-NODMIF-INPUT' units 'TAF' }
define AMERICAN_HSTREET_FLOW_ { alias AMERICAN_HSTREET_FLOW kind 'DTS-NODMIF-VALUE' units 'TAF' }
define AMERICAN_HSTREET_FLOW_MIN1_ { alias AMERICAN_HSTREET_FLOW_MIN1 kind 'DTS-NODMIF-VALUE' units 'TAF' }
define AMERICAN_HSTREET_FLOW_MIN2_ { alias AMERICAN_HSTREET_FLOW_MIN2 kind 'DTS-NODMIF-VALUE' units 'TAF' }
define AMERICAN_HSTREET_FLOW_MIN_ { alias AMERICAN_HSTREET_FLOW_MIN kind 'DTS-NODMIF-VALUE' units 'TAF' }

/******************** NOD Weirs Operation *********************/
define SPILL_TO_SUTTER 			 { timeseries 'D117' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define SPILL_FROM_MOULTON  	     { timeseries 'D124' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' } 
define SPILL_FROM_COLUSA 		 { timeseries 'D125' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define SPILL_FROM_TISDALE 		 { timeseries 'D126' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define SPILL_FROM_BUTT_CRK 		 { timeseries 'C217A' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define SPILL_FROM_FREMONT 		 { timeseries 'D160' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define SPILL_FROM_SAC_WEIR		 { timeseries 'D166A' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF'}
define SPILL_FROM_KINGHTS_LNDING { timeseries 'C184B' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }

define SPILL_TO_SUTTER_          { alias  SPILL_TO_SUTTER  kind 'WEIR-OP-VALUE' units 'TAF' }
define SPILL_FROM_MOULTON_       { alias  SPILL_FROM_MOULTON  kind 'WEIR-OP-VALUE' units 'TAF' }
define SPILL_FROM_COLUSA_     	 { alias  SPILL_FROM_COLUSA  kind 'WEIR-OP-VALUE' units 'TAF' }
define SPILL_FROM_TISDALE_ 	 	 { alias  SPILL_FROM_TISDALE  kind 'WEIR-OP-VALUE' units 'TAF' }
define SPILL_FROM_BUTT_CRK_		 { alias  SPILL_FROM_BUTT_CRK  kind 'WEIR-OP-VALUE' units 'TAF' }
define SPILL_FROM_FREMONT_ 		 { alias  SPILL_FROM_FREMONT  kind 'WEIR-OP-VALUE' units 'TAF' }
define SPILL_FROM_SAC_WEIR_ 	 { alias  SPILL_FROM_SAC_WEIR  kind 'WEIR-OP-VALUE' units 'TAF' }
define SPILL_FROM_KINGHTS_LNDING_ { alias  SPILL_FROM_KINGHTS_LNDING  kind 'WEIR-OP-VALUE' units 'TAF' }

/******************** NOD Groundwater Pumping *********************/
define GW_PMP_DSA58 { timeseries 'GP60' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define GW_PMP_DSA58_MIN { timeseries 'mingw_58' kind 'GW-PUMPING-MIN' units 'TAF' convert 'TAF' }
define GW_PMP_DSA65 { timeseries 'GP64' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define GW_PMP_DSA65_MIN { timeseries 'mingw_65' kind 'GW-PUMPING-MIN' units 'TAF' convert 'TAF' }
define GW_PMP_DSA69 { timeseries 'GP65' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define GW_PMP_DSA69_MIN { timeseries 'mingw_69' kind 'GW-PUMPING-MIN' units 'TAF' convert 'TAF' }
define GW_PMP_DSA70 { timeseries 'GP66' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define GW_PMP_DSA70_MIN { timeseries 'mingw_70' kind 'GW-PUMPING-MIN' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_1 { timeseries 'GP61' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define GW_PMP_COLUSA_2 { timeseries 'GP62' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define GW_PMP_COLUSA_3 { timeseries 'GP63' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define GW_PMP_COLUSA_MIN1 { timeseries 'MINPUMP_11302' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN2 { timeseries 'MINPUMP_11306' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN3 { timeseries 'MINPUMP_131NP' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN4 { timeseries 'MINPUMP_131SC' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN5 { timeseries 'MINPUMP_14301GCID' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN6 { timeseries 'MINPUMP_14301SC' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN7 { timeseries 'MINPUMP_14501GCID' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN8 { timeseries 'MINPUMP_14501SC' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN9 { timeseries 'MINPUMP_17101' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN10 { timeseries 'MINPUMP_17201' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN11 { timeseries 'MINPUMP_17302P' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN12 { timeseries 'MINPUMP_17401' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN13 { timeseries 'MINPUMP_17801' kind 'MINPUMP' units 'TAF' convert 'TAF' }
define GW_PMP_COLUSA_MIN14 { timeseries 'MINPUMP_18301SC' kind 'MINPUMP' units 'TAF' convert 'TAF' }


define GW_PMP_DSA58_ { alias  GW_PMP_DSA58  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_DSA58_MIN_ { alias  GW_PMP_DSA58_MIN  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_DSA65_ { alias  GW_PMP_DSA65  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_DSA65_MIN_ { alias  GW_PMP_DSA65_MIN  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_DSA69_ { alias  GW_PMP_DSA69  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_DSA69_MIN_ { alias  GW_PMP_DSA69_MIN  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_DSA70_ { alias  GW_PMP_DSA70  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_DSA70_MIN_ { alias  GW_PMP_DSA70_MIN  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_1_ { alias  GW_PMP_COLUSA_1  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_2_ { alias  GW_PMP_COLUSA_2  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_3_ { alias  GW_PMP_COLUSA_3  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN1_ { alias  GW_PMP_COLUSA_MIN1  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN2_ { alias  GW_PMP_COLUSA_MIN2  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN3_ { alias  GW_PMP_COLUSA_MIN3  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN4_ { alias  GW_PMP_COLUSA_MIN4  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN5_ { alias  GW_PMP_COLUSA_MIN5  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN6_ { alias  GW_PMP_COLUSA_MIN6  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN7_ { alias  GW_PMP_COLUSA_MIN7  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN8_ { alias  GW_PMP_COLUSA_MIN8  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN9_ { alias  GW_PMP_COLUSA_MIN9  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN10_ { alias  GW_PMP_COLUSA_MIN10  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN11_ { alias  GW_PMP_COLUSA_MIN11  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN12_ { alias  GW_PMP_COLUSA_MIN12  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN13_ { alias  GW_PMP_COLUSA_MIN13  kind 'DTS-GW-VALUE' units 'TAF' }
define GW_PMP_COLUSA_MIN14_ { alias  GW_PMP_COLUSA_MIN14  kind 'DTS-GW-VALUE' units 'TAF' }

/***************************** Delta Operation ********************************/
define C400 { timeseries 'C400' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define JP_SLOPE { timeseries 'JP_M' kind 'SLOPE' units 'NONE' convert 'TAF' }
define JP_INTERCEPT { timeseries 'JP_B' kind 'INTERCEPT' units 'NONE' convert 'TAF' }
define EM_SLOPE { timeseries 'EM_M' kind 'SLOPE' units 'NONE' convert 'TAF' }
define EM_INTERCEPT { timeseries 'EM_B' kind 'INTERCEPT' units 'NONE' convert 'TAF' }
define CO_SLOPE { timeseries 'CO_M' kind 'SLOPE' units 'NONE' convert 'TAF' }
define CO_INTERCEPT { timeseries 'CO_B' kind 'INTERCEPT' units 'NONE' convert 'TAF' }
define RS_SLOPE_1 { timeseries 'RS_M_1' kind 'SLOPE' units 'NONE' convert 'TAF' }
define RS_INTERCEPT_1 { timeseries 'RS_B_1' kind 'INTERCEPT' units 'NONE' convert 'TAF' }
define RS_SLOPE_2 { timeseries 'RS_M_2' kind 'SLOPE' units 'NONE' convert 'TAF' }
define RS_INTERCEPT_2 { timeseries 'RS_B_2' kind 'INTERCEPT' units 'NONE' convert 'TAF' } 
define RS_SLOPE_3 { timeseries 'RS_M_3' kind 'SLOPE' units 'NONE' convert 'TAF' }
define RS_INTERCEPT_3 { timeseries 'RS_B_3' kind 'INTERCEPT' units 'NONE' convert 'TAF' }
define JONES_EXP1 { timeseries 'D418_EXP1' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define JONES_EXP2 { timeseries 'D418_EXP2' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define JONES_CVP { timeseries 'D418_CVP' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define JONES_WTS { timeseries 'D418_WTS' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define BANKS_EXP1 { timeseries 'D419_EXP1' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define BANKS_EXP2 { timeseries 'D419_EXP2' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define BANKS_CVP { timeseries 'D419_CVP' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define BANKS_SWP { timeseries 'D419_SWP' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define BANKS_WTS { timeseries 'D419_WTS' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }

define C400_ { alias C400 kind 'DTS-DELTA-OP-INPUT' units 'TAF' }
define JP_SLOPE_ { alias JP_SLOPE kind 'DTS-DELTA-OP-INPUT' units 'TAF' }
define JP_INTERCEPT_ { alias JP_INTERCEPT kind 'DTS-DELTA-OP-INPUT' units 'TAF' }
define EM_SLOPE_ { alias EM_SLOPE kind 'DTS-DELTA-OP-INPUT' units 'TAF' }
define EM_INTERCEPT_ { alias EM_INTERCEPT kind 'DTS-DELTA-OP-INPUT' units 'TAF' }
define COLLINS_SLOPE_ { alias CO_SLOPE kind 'DTS-DELTA-OP-INPUT' units 'TAF' }
define COLLINS_INTERCEPT_ { alias CO_INTERCEPT kind 'DTS-DELTA-OP-INPUT' units 'TAF' }
define RS_SLOPE_1_ { alias RS_SLOPE_1 kind 'DTS-DELTA-OP-INPUT' units 'TAF' }
define RS_INTERCEPT_1_ { alias RS_INTERCEPT_1 kind 'DTS-DELTA-OP-INPUT' units 'TAF' }
define RS_SLOPE_2_ { alias RS_SLOPE_2 kind 'DTS-DELTA-OP-INPUT' units 'TAF' }
define RS_INTERCEPT_2_ { alias RS_INTERCEPT_2 kind 'DTS-DELTA-OP-INPUT' units 'TAF' }
define RS_SLOPE_3_ { alias RS_SLOPE_3 kind 'DTS-DELTA-OP-INPUT' units 'TAF' }
define RS_INTERCEPT_3_ { alias RS_INTERCEPT_3 kind 'DTS-DELTA-OP-INPUT' units 'TAF' }


define JONES_EXP1_ { alias JONES_EXP1 kind 'DTS-DELTA-OP-VALUE' units 'TAF' }
define JONES_EXP2_ { alias JONES_EXP2 kind 'DTS-DELTA-OP-VALUE' units 'TAF' }
define JONES_CVP_ { alias JONES_CVP kind 'DTS-DELTA-OP-VALUE' units 'TAF' }
define BANKS_EXP1_ { alias BANKS_EXP1 kind 'DTS-DELTA-OP-VALUE' units 'TAF' }
define BANKS_EXP2_ { alias BANKS_EXP2 kind 'DTS-DELTA-OP-VALUE' units 'TAF' }
define BANKS_CVP_ { alias BANKS_CVP kind 'DTS-DELTA-OP-VALUE' units 'TAF' }
define BANKS_SWP_ { alias BANKS_SWP kind 'DTS-DELTA-OP-VALUE' units 'TAF' }
define BANKS_WTS_ { alias BANKS_WTS kind 'DTS-DELTA-OP-VALUE' units 'TAF' }

/******************** SOD EXPORT *********************/
define BANKS_EXP 		{timeseries 'D419' 				kind 'FLOW-DELIVERY' 		units 'CFS' convert 'TAF' }
define JONES_EXP 		{timeseries 'D418' 				kind 'FLOW-DELIVERY' 		units 'CFS' convert 'TAF' }
define BANKSALLOWOUT 	{timeseries 'BANKSALLOWOUT' 	kind 'FLOW-ALLOW-BANKS' 	units 'CFS' convert 'TAF' }
define JONESALLOWOUT 	{timeseries 'JONESALLOWOUT' 	kind 'EXPORT-CTRL-JONES' 	units 'CFS' convert 'TAF' }
define MAXJONESCALCDV 	{timeseries 'MAXJONESCALCDV' 	kind 'UNDEFINED' 			units 'CFS' convert 'TAF' }
define APRMAYEXPCTRL	{timeseries 'APRMAYEXPCTRL' 	kind 'EXPORT-CTRL-APRMAY' 	units 'CFS'  convert 'TAF'} 
define MAXEXP_RPA	 	{timeseries 'MAXEXP_RPADV' 		kind 'EXPORT-LIMIT' 		units 'CFS'  convert 'TAF'} 
define FWS_X2_LIMIT 	{timeseries 'FWS_MAXEXPX2DV' 	kind 'EXPORT-LIMIT' 		units 'CFS'  convert 'TAF'}
define NMFS_MAXEXPDCC	{timeseries 'NMFS_MAXEXPDCCDV'	kind 'EXPORT-LIMIT' 		units 'CFS'  convert 'TAF'}
define BANKS_UPSTREAM 	{timeseries 'D409_UPS' 	kind 'DEBUG-CFS' 		units 'CFS'  convert 'TAF'}
define TOT_EXP 			{timeseries 'D409' 				kind 'FLOW-DELIVERY' 		units 'CFS'  convert 'TAF'} 
define NMFS_MAXEXP		{timeseries 'NMFS_MAXEXPDV' 	kind 'NMFS' 				units 'CFS'  convert 'TAF'}
define APRMAYTRACYCTRL 	{timeseries 'APRMAYTRACYCTRL' 	kind 'EXPORT-CTRL-APRMAY'	units 'CFS'  convert 'TAF'} 
define MAXEXP_RPA_SWP	{timeseries 'MAXEXP_RPA_SWPDV'	kind 'EXPORT-LIMIT' 		units 'CFS'  convert 'TAF'} 
define EXPORT_DEC 		{timeseries 'EXPORT_DEC_' 		kind 'TEMP' 				units 'CFS'  convert 'TAF'} 
define NMFS_DCC_LIMIT 	{timeseries 'NMFS_MaxExpDCCdv'	kind 'EXPORT-LIMIT'			units 'CFS'  convert 'TAF'}
define APRMAYBANKSCTRL 	{timeseries 'APRMAYBANKSCTRL' 	kind 'EXPORT-CTRL-APRMAY' 	units 'CFS'  convert 'TAF'} 
define MAXEXP_RPA_CVP	{timeseries 'MAXEXP_RPA_CVPDV' 	kind 'EXPORT-LIMIT' 		units 'CFS'  convert 'TAF'} 
define SOD_EXP_MAXCAP 	{value BANKSALLOWOUT + JONESALLOWOUT}


!define BANKS_EXP_ { alias  BANKS_EXP  kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
!define JONES_EXP_ { alias  JONES_EXP  kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define BANKSALLOWOUT_ 		{ alias  BANKSALLOWOUT  	kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define JONESALLOWOUT_ 		{ alias  JONESALLOWOUT 		kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define APRMAYEXPCTRL_ 		{ alias  APRMAYEXPCTRL 		kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define MAXEXP_RPA_ 			{ alias  MAXEXP_RPA  		kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define FWS_X2_LIMIT_ 		{ alias  FWS_X2_LIMIT  		kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define NMFS_MAXEXPDCC_ 		{ alias  NMFS_MAXEXPDCC  	kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define BANKS_UPSTREAM_ 		{ alias  BANKS_UPSTREAM  	kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define TOT_EXP_ 			{ alias  TOT_EXP  			kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define NMFS_MAXEXP_			{ alias  NMFS_MAXEXP  		kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define APRMAYTRACYCTRL_		{ alias  APRMAYTRACYCTRL 	kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define MAXEXP_RPA_SWP_ 		{ alias  MAXEXP_RPA_SWP  	kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define EXPORT_DEC_ 			{ alias  EXPORT_DEC  		kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define NMFS_DCC_LIMIT_ 		{ alias  NMFS_DCC_LIMIT 	kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define APRMAYBANKSCTRL_ 	{ alias  APRMAYBANKSCTRL  	kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define MAXJONESCALCDV_ 	    { alias  MAXJONESCALCDV  	kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define MAXEXP_RPA_CVP_ 		{ alias  MAXEXP_RPA_CVP  	kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }
define SOD_EXP_MAXCAP_ 		{ alias  SOD_EXP_MAXCAP 	kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }


/***************************** Delta Control ********************************/
define REQ_DO 			{ timeseries 'D407' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define RIOVISTA 		{ timeseries 'C405' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define RIOVISTA_MIF 	{ timeseries 'C405_MIF' kind 'FLOW-MIN-INSTREAM' units 'CFS' convert 'TAF' }
define QWEST 			{ timeseries 'C416A' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define EXPRATIO 		{ timeseries 'EXPRATIO_' kind 'EI-RATIO-STD' units 'NONE'}
define D409_Delta 		{ timeseries 'D409_Del' kind 'DEBUG-CFS' units 'CFS' convert 'TAF' }
define D409_Upstream 	{ timeseries 'D409_Ups' kind 'DEBUG-CFS' units 'CFS' convert 'TAF' }
define DO 				{ timeseries 'C406' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define C406_Delta 		{ timeseries 'C406_Del' kind 'DEBUG-CFS' units 'CFS' convert 'TAF' }
define C406_Upstream 	{ timeseries 'C406_Ups' kind 'DEBUG-CFS' units 'CFS' convert 'TAF' }
define OMR_INCREASE_ 	{ timeseries 'OMR_INCREASE_' kind 'TEMP' units 'CFS' convert 'TAF' }
define EXPORT_DEC_RPA_ 	{ timeseries 'EXPORT_DEC_RPA_' kind 'TEMP' units 'CFS' convert 'TAF' }
define JP_MRDO 			{ timeseries 'JP_MRDO' kind 'FLOW' units 'CFS' convert 'TAF' }
define EM_MRDO 			{ timeseries 'EM_MRDO' kind 'FLOW' units 'CFS' convert 'TAF' }
define RS_MRDO_1 		{ timeseries 'RS_MRDO_1' kind 'FLOW' units 'CFS' convert 'TAF' }
define RS_MRDO_2 		{ timeseries 'RS_MRDO_2' kind 'FLOW' units 'CFS' convert 'TAF' }
define RS_MRDO_3 		{ timeseries 'RS_MRDO_3' kind 'FLOW' units 'CFS' convert 'TAF' }
define CO_MRDO 			{ timeseries 'CO_MRDO' kind 'FLOW' units 'CFS' convert 'TAF' }
define C407_ANN 		{ timeseries 'C407_ANN' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define C514 			{ timeseries 'C514' kind 'flow-channel' units 'CFS' convert 'TAF'}
define C417A 			{ timeseries 'C417A' kind 'flow-channel' units 'CFS' convert 'TAF'}
define DO_REQ_FLOW_OUT 	{ timeseries 'DO_req_flow_out' kind 'FLOW-REQ-NDOI' units 'CFS' convert 'TAF' }
define NMFS_MaxExpdv	{timeseries 'NMFS_MaxExpdv' kind 'NMFS' units 'CFS' convert 'TAF' }
define NMFS_MaxExpDCCdv { timeseries 'NMFS_MaxExpDCCdv' kind 'EXPORT-LIMIT' units 'CFS' convert 'TAF' }
define NMFSdaysopentgdv { timeseries 'NMFSdaysopentgdv' kind 'DCC-DAYS-OPEN' units 'NONE'}
define NMFSdaysopendv 	{ timeseries 'NMFSdaysopendv' kind 'DCC-DAYS-OPEN' units 'NONE'}
define NMFSMaxExDCCest_ { timeseries 'NMFSMaxExDCCest_' kind 'EXPORT-LIMIT' units 'cfs' convert 'TAF'}
define EIEXPCTRL 		{ timeseries 'EIEXPCTRL' kind 'EXPORT-CTRL-EI' units 'CFS' convert 'TAF' }
define BANKS 			{ timeseries 'D418' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define JONES 			{ timeseries 'D419' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define C400_EXC 		{ timeseries 'c400_exc' kind 'flow-excess-instream' units 'CFS' convert 'TAF' }
define C157_EXC 		{ timeseries 'c157_exc' kind 'flow-excess-instream' units 'CFS' convert 'TAF' }
define X2_PRV 			{ timeseries 'x2_prv' kind 'x2-position-prev' units 'km'}
define OMR_RPA14d 		{ timeseries 'OMR_RPA14d' kind 'flow-reg' units 'CFS' convert 'TAF'}
define RS_EC_MONTH 		{ timeseries 'rs_ec_month' kind 'salinity' units 'umhos/cm'}
define EM_EC_MONTH 		{ timeseries 'em_ec_month' kind 'salinity' units 'umhos/cm'}
define JP_EC_MONTH 		{ timeseries 'jp_ec_month' kind 'salinity' units 'umhos/cm'}
define CO_EC_MONTH 		{ timeseries 'co_ec_month' kind 'salinity' units 'umhos/cm'}
define RS_EC_STD 		{ timeseries 'rs_ec_std' kind 'salinity' units 'umhos/cm'}
define EM_EC_STD 		{ timeseries 'em_ec_std' kind 'salinity' units 'umhos/cm'}
define JP_EC_STD 		{ timeseries 'jp_ec_std' kind 'salinity' units 'umhos/cm'}
define CO_EC_STD 		{ timeseries 'co_ec_std' kind 'salinity' units 'umhos/cm'}
define OMR_LBOUND 		{ timeseries 'C408_LBOUND' kind 'FLOW-LBOUND' units 'CFS' convert 'TAF'}
define OMR_NoEXP1 		{ timeseries 'C408_NoEXP1' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF'}
define OMR 				{ timeseries 'C408' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF'}
define C407 			{ timeseries 'C407' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define C407_whlcv 		{ timeseries 'C407_whlcv' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define C407_whljp 		{ timeseries 'C407_whljp' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define C407_WTS 		{ timeseries 'C407_WTS' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define D168C_EXC_NTDEP 	{ timeseries 'D168C_EXC_NTDEP' kind 'FLOW' units 'CFS' convert 'TAF' }
define D418_TD 			{ timeseries 'D418_TD' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define D419_TD 			{ timeseries 'D419_TD' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }

define Rio_req_lookup {  ! Minimum Flow required @ Rio Vista
       select       river_q
       from         riovista
       where        month=month, wyt_SAC=wyt_SAC}
define qwest_std_lookup { ! Minimum Flow required @ QWEST
		select 		QWESTstd 
		from 		qwest 
		where 		month=month, WYT=wyt_SAC}
		
define Rio_req {value Rio_req_lookup}
define qwest_std {value qwest_std_lookup} 

define REQ_DO_ { alias REQ_DO kind 'DTS-RESOP-INPUT' units 'TAF' }
define C407_ { alias C407 kind 'DTS-RESOP-INPUT' units 'TAF' }
define C407_whlcv_ { alias C407_whlcv kind 'DTS-RESOP-INPUT' units 'TAF' }
define C407_whljp_ { alias C407_whljp kind 'DTS-RESOP-INPUT' units 'TAF' }
define C407_WTS_ { alias C407_WTS kind 'DTS-RESOP-INPUT' units 'TAF' }
define RIOVISTA_ { alias RIOVISTA kind 'DTS-RESOP-INPUT' units 'TAF' }
define RIOVISTA_MIF_ { alias Rio_req kind 'DTS-RESOP-INPUT' units 'TAF' }
define QWEST_ { alias QWEST kind 'DTS-RESOP-INPUT' units 'TAF' }
define D168C_EXC_NTDEP_ { alias D168C_EXC_NTDEP kind 'DTS-RESOP-INPUT' units 'TAF' }
define D418_TD_ { alias D418_TD kind 'DTS-RESOP-INPUT' units 'TAF' }
define D419_TD_ { alias D419_TD kind 'DTS-RESOP-INPUT' units 'TAF' }
define EXPRATIO_ { alias EXPRATIO kind 'DTS-RESOP-INPUT' units 'NONE' }
define D409_Delta_ { alias D409_Delta kind 'DTS-RESOP-INPUT' units 'TAF' }
define D409_Upstream_ { alias D409_Upstream kind 'DTS-RESOP-INPUT' units 'TAF' }
define DO_ { alias DO kind 'DTS-RESOP-INPUT' units 'TAF' }
define C406_Delta_ { alias C406_Delta kind 'DTS-RESOP-INPUT' units 'TAF' }
define C406_Upstream_ { alias C406_Upstream kind 'DTS-RESOP-INPUT' units 'TAF' }
define OMR_INCREASE__ { alias OMR_INCREASE_ kind 'DTS-RESOP-INPUT' units 'TAF' }
define EXPORT_DEC_RPA__ { alias EXPORT_DEC_RPA_ kind 'DTS-RESOP-INPUT' units 'TAF' }
define JP_MRDO_ { alias JP_MRDO kind 'DTS-RESOP-INPUT' units 'TAF' }
define EM_MRDO_ { alias EM_MRDO kind 'DTS-RESOP-INPUT' units 'TAF' }
define RS_MRDO_1_ { alias RS_MRDO_1 kind 'DTS-RESOP-INPUT' units 'TAF' }
define RS_MRDO_2_ { alias RS_MRDO_2 kind 'DTS-RESOP-INPUT' units 'TAF' }
define RS_MRDO_3_ { alias RS_MRDO_3 kind 'DTS-RESOP-INPUT' units 'TAF' }
define CO_MRDO_ { alias CO_MRDO kind 'DTS-RESOP-INPUT' units 'TAF' }
define C407_ANN_ { alias C407_ANN kind 'DTS-RESOP-INPUT' units 'TAF' }
define DO_REQ_FLOW_OUT_ { alias DO_REQ_FLOW_OUT kind 'DTS-RESOP-INPUT' units 'TAF' }
define NMFS_MaxExpdv_ { alias NMFS_MaxExpdv kind 'DTS-RESOP-INPUT' units 'TAF' }
define NMFS_MaxExpDCCdv_ { alias NMFS_MaxExpDCCdv kind 'DTS-RESOP-INPUT' units 'TAF' }
define NMFSdaysopentgdv_ { alias NMFSdaysopentgdv kind 'DTS-RESOP-INPUT' units 'TAF' }
define NMFSdaysopendv_ { alias NMFSdaysopendv kind 'DTS-RESOP-INPUT' units 'TAF' }
define NMFSMaxExDCCest_dv {alias NMFSMaxExDCCest_ kind 'Export-Limit' units 'TAF'} !for output only
define EIEXPCTRL_ { alias EIEXPCTRL kind 'DTS-RESOP-INPUT' units 'TAF' }
define BANKS_ { alias BANKS kind 'DTS-RESOP-INPUT' units 'TAF' }
define JONES_ { alias JONES kind 'DTS-RESOP-INPUT' units 'TAF' }
define c400_exc_ { alias c400_exc kind 'DTS-RESOP-INPUT' units 'TAF' }
define c157_exc_ { alias c157_exc kind 'DTS-RESOP-INPUT' units 'TAF' }
define x2_prv_ { alias x2_prv kind 'DTS-RESOP-INPUT' units 'TAF' }
define OMR_RPA14d_ { alias OMR_RPA14d kind 'DTS-RESOP-INPUT' units 'TAF' }
define rs_ec_month_ { alias rs_ec_month kind 'DTS-RESOP-INPUT' units 'umhos/cm' }
define em_ec_month_ { alias em_ec_month kind 'DTS-RESOP-INPUT' units 'umhos/cm' }
define jp_ec_month_ { alias jp_ec_month kind 'DTS-RESOP-INPUT' units 'umhos/cm' }
define co_ec_month_ { alias co_ec_month kind 'DTS-RESOP-INPUT' units 'umhos/cm' }
define rs_ec_std_ { alias rs_ec_std kind 'DTS-RESOP-INPUT' units 'umhos/cm' }
define em_ec_std_ { alias em_ec_std kind 'DTS-RESOP-INPUT' units 'umhos/cm' }
define jp_ec_std_ { alias jp_ec_std kind 'DTS-RESOP-INPUT' units 'umhos/cm' }
define co_ec_std_ { alias co_ec_std kind 'DTS-RESOP-INPUT' units 'umhos/cm' }
define OMR_LBOUND_ { alias OMR_LBOUND kind 'DTS-RESOP-INPUT' units 'TAF' }
define OMR_NoEXP1_ { alias OMR_NoEXP1 kind 'DTS-RESOP-INPUT' units 'TAF' }
define OMR_ { alias OMR kind 'DTS-RESOP-INPUT' units 'TAF' }

/******************** COA *********************/



/******************** Allocations and Deliveries *********************/
define SHORT_CVP_TOT_N 	 {timeseries 'SHORT_CVP_TOT_N'   kind 'DELIVERY-SHORTAGE-CVP' units 'CFS' convert 'TAF'} !TOTAL NOD SHORTAGE   
define SHORT_CVP_TOT_S 	 {timeseries 'SHORT_CVP_TOT_S'   kind 'DELIVERY-SHORTAGE-CVP' units 'CFS' convert 'TAF'} !TOTAL SOD SHORTAGE
define SHORT_SWP_PAG_S 	 {timeseries 'SHORT_SWP_PAG_S'   kind 'DELIVERY-SHORTAGE-SWP' units 'CFS' convert 'TAF'} !AG SOD SHORTAGE
define SHORT_SWP_PMI_S 	 {timeseries 'SHORT_SWP_PMI_S'   kind 'DELIVERY-SHORTAGE-SWP' units 'CFS' convert 'TAF'} !M&I SOD SHORTAGE 
define SHORT_CVP_PMI_S 	 {timeseries 'SHORT_CVP_PMI_S'   kind 'DELIVERY-SHORTAGE-CVP' units 'CFS' convert 'TAF'} !M&I SOD SHORTAGE 
define SHORT_CVP_PMI_N 	 {timeseries 'SHORT_CVP_PMI_N'   kind 'DELIVERY-SHORTAGE-CVP' units 'CFS'convert 'TAF'} !M&I NOD SHORTAGE 
define SHORT_CVP_PSC_N 	 {timeseries 'SHORT_CVP_PSC_N' 	 kind 'DELIVERY-SHORTAGE-CVP' units 'CFS'convert 'TAF'} !SETTLEMENT NOD SHORTAGE
define SWP_PERDELDV_YUBA {timeseries 'SWP_PERDELDV_YUBA' kind 'SWP-DELIVERY' units 'NONE'}
define SWP_PERDEL_SOD    {timeseries 'SWP_PERDEL_SOD_DV' kind 'SWP-DELIVERY' units 'NONE'}
define PERDV_SWP_FSC 	 {timeseries 'PERDV_SWP_FSC' 	 kind 'PERCENT-DELIVERY' units 'NONE'}
define DEL_CVP_PSC_N 	 {timeseries 'DEL_CVP_PSC_N' 	 kind 'DELIVERY-CVP' units 'CFS' convert 'TAF'}
define CVPTOTALDEL 		 {timeseries 'CVPTOTALDEL' 		 kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF'}   
define DEL_CVP_PAG_N	 {timeseries 'DEL_CVP_PAG_N' 	 kind 'DELIVERY-CVP' units 'CFS' convert 'TAF'}
define DEL_CVP_TOTAL_S 	 {timeseries 'DEL_CVP_TOTAL_S' 	 kind 'DELIVERY-CVP' units 'CFS' convert 'TAF'}
define SHORT_CVP_PRF_N 	 {timeseries 'SHORT_CVP_PRF_N' 	 kind 'DELIVERY-SHORTAGE-CVP' units 'CFS' convert 'TAF'} !REFUGES NOD SHORTAGE
define DEL_CVP_PLS_S 	 {timeseries 'DEL_CVP_PLS_S'	 kind 'DELIVERY-CVP' units 'CFS' convert 'TAF'}
define PERDV_CVPMI_SYS 	 {timeseries 'PERDV_CVPMI_SYS' 	 kind 'PERCENT-DELIVERY' units 'NONE'}
define PERDV_CVPRF_SYS 	 {timeseries 'PERDV_CVPRF_SYS' 	 kind 'PERCENT-DELIVERY' units 'NONE'}
define PERDV_CVPSC_SYS 	 {timeseries 'PERDV_CVPSC_SYS' 	 kind 'PERCENT-DELIVERY' units 'NONE'}
define PERDV_CVPAG_S 	 {timeseries 'PERDV_CVPAG_S' kind 'PERCENT-DELIVERY' units 'NONE'}
define PERDV_CVPRF_S 	 {timeseries 'PERDV_CVPRF_S' kind 'PERCENT-DELIVERY' units 'NONE'}
define PERDV_CVPEX_S 	 {timeseries 'PERDV_CVPEX_S' kind 'PERCENT-DELIVERY' units 'NONE'}
define DEL_CVP_PMI_N 	 {timeseries 'DEL_CVP_PMI_N' kind 'DELIVERY-CVP' units 'CFS' convert 'TAF'}
define DEL_CVP_PRF_N 	 {timeseries 'DEL_CVP_PRF_N' kind 'DELIVERY-CVP' units 'CFS' convert 'TAF'}
define DEL_CVP_PAG_S 	 {timeseries 'DEL_CVP_PAG_S' kind 'DELIVERY-CVP' units 'CFS' convert 'TAF'}
define DEL_CVP_PMI_S 	 {timeseries 'DEL_CVP_PMI_S' kind 'DELIVERY-CVP' units 'CFS' convert 'TAF'}
define DEL_CVP_PRF_S 	 {timeseries 'DEL_CVP_PRF_S' kind 'DELIVERY-CVP' units 'CFS' convert 'TAF'}
define DEL_CVP_PEX_S 	 {timeseries 'DEL_CVP_PEX_S' kind 'DELIVERY-CVP' units 'CFS' convert 'TAF'}
define WEST_CANAL_WD	 {timeseries 'D7C' 				kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF'}
define DEL_CVP_TOTAL_N	 {timeseries 'DEL_CVP_TOTAL_N' kind 'DELIVERY-CVP' units 'CFS' convert 'TAF'}
define SHORT_CVP_PAG_N 	 {timeseries 'SHORT_CVP_PAG_N' kind 'DELIVERY-SHORTAGE-CVP' units 'CFS' convert 'TAF'} !AG NOD SHORTAGE
define SHORT_CVP_PAG_S   {timeseries 'SHORT_CVP_PAG_S' kind 'DELIVERY-SHORTAGE-CVP' units 'CFS' convert 'TAF'} !AG SOD SHORTAGE
define SHORT_CVP_PRF_S   {timeseries 'SHORT_CVP_PRF_S' kind 'DELIVERY-SHORTAGE-CVP' units 'CFS' convert 'TAF'} !REFUGES SOD SHORTAGE
define SHORT_CVP_PEX_S 	 {timeseries 'SHORT_CVP_PEX_S' kind 'DELIVERY-SHORTAGE-CVP' units 'CFS' convert 'TAF'} 
define SHORT_CVP_PLS_S 	 {timeseries 'SHORT_CVP_PLS_S' kind 'DELIVERY-SHORTAGE-CVP' units 'CFS' convert 'TAF'} !PROJECT LOSS SOD SHORTAGE
define SHORT_SWP_TOT_N   {timeseries 'SHORT_SWP_TOT_N' kind 'DELIVERY-SHORTAGE-SWP' units 'CFS' convert 'TAF'} !TOTAL NOD SHORTAGE
define SHORT_SWP_PAG_N   {timeseries 'SHORT_SWP_PAG_N' kind 'DELIVERY-SHORTAGE-SWP' units 'CFS' convert 'TAF'} !AG NOD SHORTAGE
define SHORT_SWP_PMI_N   {timeseries 'SHORT_SWP_PMI_N' kind 'DELIVERY-SHORTAGE-SWP' units 'CFS' convert 'TAF'} !M&I NOD SHORTAGE 
define SHORT_SWP_PWR 	 {timeseries 'SHORT_SWP_PWR'   kind 'DELIVERY-SHORTAGE-SWP' units 'CFS' convert 'TAF'} 
define SHORT_SWP_TOT_S 	 {timeseries 'SHORT_SWP_TOT_S' kind 'DELIVERY-SHORTAGE-SWP' units 'CFS' convert 'TAF'} !TOTAL SOD SHORTAGE
define SHORT_SWP_PLS 	 {timeseries 'SHORT_SWP_PLS'   kind 'DELIVERY-SHORTAGE-SWP' units 'CFS' convert 'TAF'} !LOSS SOD SHORTAGE
define SWP_FRSA			 {timeseries 'SWP_FRSA'        kind 'SWP_DELIVERY' 			units 'CFS' convert 'TAF'}
define SWP_PERDELDV_SOLANO {timeseries 'SWP_PERDELDV_SOLANO' kind 'SWP-DELIVERY' 	 units 'NONE'}
define SWP_PERDELDV_BUTT   {timeseries 'SWP_PERDELDV_BUTT'   kind 'SWP-DELIVERY' 	 units 'NONE'}
define DEL_CVP_TOTAL 	   {timeseries 'DEL_CVP_TOTAL'       kind 'DELIVERY-CVP'  	 units 'CFS' convert 'TAF'}
define SWP_PERDELDV_NAPA   {timeseries 'SWP_PERDELDV_NAPA'   kind 'SWP-DELIVERY' 	 units 'NONE'}
define PERDV_CVPAG_SYS 	   {timeseries 'PERDV_CVPAG_SYS' 	 kind 'PERCENT-DELIVERY' units 'NONE'}
define PERDV_CVPMI_S 	   {timeseries 'PERDV_CVPMI_S' 		 kind 'PERCENT-DELIVERY' units 'NONE'}



!define SHORT_CVP_TOT_ 	{alias SHORT_CVP_TOT kind 'DTS-ALLOC-VALUE' units 'TAF'}
DEFINE PERDV_CVPAG_SYS_ 	{alias PERDV_CVPAG_SYS kind 'DTS-ALLOC-STATUS' units 'NONE'}
DEFINE PERDV_CVPMI_SYS_ 	{alias PERDV_CVPMI_SYS kind 'DTS-ALLOC-STATUS' units 'NONE'}
DEFINE PERDV_CVPRF_SYS_ 	{alias PERDV_CVPRF_SYS kind 'DTS-ALLOC-STATUS' units 'NONE'}
DEFINE PERDV_CVPSC_SYS_ 	{alias PERDV_CVPSC_SYS kind 'DTS-ALLOC-STATUS' units 'NONE'}
DEFINE PERDV_CVPAG_S_ 		{alias PERDV_CVPAG_S   kind 'DTS-ALLOC-STATUS' units 'NONE'}
DEFINE PERDV_CVPMI_S_ 		{alias PERDV_CVPMI_S   kind 'DTS-ALLOC-STATUS' units 'NONE'}
DEFINE PERDV_CVPRF_S_ 		{alias PERDV_CVPRF_S   kind 'DTS-ALLOC-STATUS' units 'NONE'}
DEFINE PERDV_CVPEX_S_ 		{alias PERDV_CVPEX_S   kind 'DTS-ALLOC-STATUS' units 'NONE'}
define DEL_CVP_PAG_N_ {alias DEL_CVP_PAG_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define DEL_CVP_PMI_N_ {alias DEL_CVP_PMI_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define DEL_CVP_PRF_N_ {alias DEL_CVP_PRF_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define DEL_CVP_PSC_N_ {alias DEL_CVP_PSC_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define DEL_CVP_PAG_S_ {alias DEL_CVP_PAG_S kind 'DTS-ALLOC-VALUE' units  'TAF'}
define DEL_CVP_PMI_S_ {alias DEL_CVP_PMI_S kind 'DTS-ALLOC-VALUE' units  'TAF'}
define DEL_CVP_PRF_S_ {alias DEL_CVP_PRF_S kind 'DTS-ALLOC-VALUE' units  'TAF'}
define DEL_CVP_PEX_S_ {alias DEL_CVP_PEX_S kind 'DTS-ALLOC-VALUE' units  'TAF'}
define DEL_CVP_PLS_S_ {alias DEL_CVP_PLS_S kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SWP_PERDELDV_YUBA_ 	{alias SWP_PERDELDV_YUBA 	kind 'DTS-ALLOC-STATUS' units 'NONE'}
define SWP_PERDELDV_BUTT_ 	{alias SWP_PERDELDV_BUTT 	kind 'DTS-ALLOC-STATUS' units 'NONE'}
define SWP_PERDELDV_NAPA_ 	{alias SWP_PERDELDV_NAPA 	kind 'DTS-ALLOC-STATUS' units 'NONE'}
define SWP_PERDELDV_SOLANO_ {alias SWP_PERDELDV_SOLANO 	kind 'DTS-ALLOC-STATUS' units 'NONE'}
define SWP_PERDEL_SOD_  	{alias SWP_PERDEL_SOD 		kind 'DTS-ALLOC-STATUS' units 'NONE'}
define SWP_FRSA_ 			{alias SWP_FRSA 			kind 'DTS-ALLOC-VALUE' units  'TAF'}
define PERDV_SWP_FSC_ 		{alias PERDV_SWP_FSC 		kind 'DTS-ALLOC-STATUS' units 'NONE'}

! define swp_in_total_ {alias swp_in_total kind 'SWP-DELIVERY' units 'CFS' convert 'TAF'}
define WEST_CANAL_WD_	{alias WEST_CANAL_WD 			kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_SWP_PMI_N_ {alias SHORT_SWP_PMI_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_SWP_PWR_ 	{alias  SHORT_SWP_PWR 	 kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_SWP_TOT_S_  {alias SHORT_SWP_TOT_S  kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_SWP_PLS_ 	{alias  SHORT_SWP_PLS 	 kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_CVP_TOT_N_ {alias SHORT_CVP_TOT_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_CVP_TOT_S_ {alias SHORT_CVP_TOT_S kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_SWP_PAG_S_ {alias SHORT_SWP_PAG_S kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_SWP_PMI_S_ {alias SHORT_SWP_PMI_S kind 'DTS-ALLOC-VALUE' units 'TAF'}
define DEL_CVP_TOTAL_S_ {alias DEL_CVP_TOTAL_S kind 'DTS-ALLOC-VALUE' units  'TAF'}
define DEL_CVP_TOTAL_N_ {alias DEL_CVP_TOTAL_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define DEL_CVP_TOTAL_ 	{alias DEL_CVP_TOTAL   kind 'DTS-ALLOC-VALUE' units  'TAF'}
define CVPTOTALDEL_ 	{alias CVPTOTALDEL   kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_CVP_PRF_S_ {alias SHORT_CVP_PRF_S kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_CVP_PEX_S_ {alias SHORT_CVP_PEX_S kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_CVP_PLS_S_ {alias SHORT_CVP_PLS_S kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_SWP_TOT_N_ {alias SHORT_SWP_TOT_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_SWP_PAG_N_ {alias SHORT_SWP_PAG_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_CVP_PAG_N_ {alias SHORT_CVP_PAG_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_CVP_PMI_N_ {alias SHORT_CVP_PMI_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_CVP_PRF_N_ {alias SHORT_CVP_PRF_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_CVP_PSC_N_ {alias SHORT_CVP_PSC_N kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_CVP_PAG_S_ {alias SHORT_CVP_PAG_S kind 'DTS-ALLOC-VALUE' units  'TAF'}
define SHORT_CVP_PMI_S_ {alias SHORT_CVP_PMI_S kind 'DTS-ALLOC-VALUE' units  'TAF'}